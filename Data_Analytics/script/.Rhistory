beta0 + beta1*6
#funzione lm
regresslin <- lm(whiteside$Gas ~ whiteside$Temp)
regresslin
#qua dentro trovo sia i coefficienti che i residui (le distanze dalla retta)
regresslin$coefficients
regresslin$residuals
summary(regresslin)
regresslin$residuals
summary(regresslin)
data("iris")
#sto vedendo sepal.length condizionata alle categorie della specie
devianzaGen <- var(iris$Sepal.Length) * (length(iris$Sepal.Length) - 1)
dev1 <- var(iris$Sepal.Length[iris$Species == "setosa"]) * (length(iris$Sepal.Length[iris$Species == "setosa"]) - 1)
dev2 <- var(iris$Sepal.Length[iris$Species == "virginica"]) * (length(iris$Sepal.Length[iris$Species == "virginica"]) - 1)
dev3 <- var(iris$Sepal.Length[iris$Species == "versicolor"]) * (length(iris$Sepal.Length[iris$Species == "versicolor"]) - 1)
boxplot(iris$Sepal.Length ~ iris$Species)
media1 <- mean(iris$Sepal.Length[iris$Species == "setosa"])
media2 <- mean(iris$Sepal.Length[iris$Species == "virginica"])
media3 <- mean(iris$Sepal.Length[iris$Species == "versicolor"])
medie_gruppi <- c(media1, media2, media3)
dev_medie <- var(medie_gruppi) * 2
dev_medie + mean(dev1, dev2, dev3)
library(MASS)
data("whiteside")
#voglio scoprire se quanto gas consumo dipende dalla temperatura esterna
plot(whiteside$Gas, whiteside$Temp)
plot(whiteside$Temp, whiteside$Gas)
plot(whiteside$Temp, whiteside$Gas)
#vedo che ha covarianza negativa
codevianza <- sum((whiteside$Temp-mean(whiteside$Temp))*(whiteside$Gas - mean(whiteside$Gas)))
n <- length(whiteside$Temp)
covarianzaN <- codevianza/n
#uso la funzione di R
cov(whiteside$Temp, whiteside$Gas)
#vedo che è diversa perche divide per n-1
covarianzaMenoUno <- codevianza/(n - 1)
covarianzaMenoUno == cov(whiteside$Temp, whiteside$Gas)
#calcolo il coeff. di correlazione lineare
coeff <- covarianzaMenoUno/sqrt(var(whiteside$Temp)*var(whiteside$Gas))
cor(whiteside$Gas, whiteside$Temp)
#trovo i coeff della regressione
beta1 <- covarianzaMenoUno/var(whiteside$Temp)
beta0 <- mean(whiteside$Gas)-beta1*mean(whiteside$Temp)
#ora traccio la retta con questi coeff
abline(beta0, beta1, col=2)
#voglio prevedere quanto sara il consumo di gas se ad esempio ci saranno 6 gradi
beta0 + beta1*6
#funzione lm
regresslin <- lm(whiteside$Gas ~ whiteside$Temp)
#qua dentro trovo sia i coefficienti che i residui (le distanze dalla retta)
regresslin$coefficients
regresslin$residuals
summary(regresslin)
regresslin$residuals
res <- regresslin$residuals
summary(regresslin)
devtot <- var(whiteside$Gas) * (n-1)
devres <- var(res) * (n-1)
devres/devtot
R2 <- 1-(devres/devtot)
#voglio vedere se è uguale a r2
r2 <- cor(whiteside$Temp, whiteside$Gas)^2
r2 == R2
#provo metodo del nucleo
case <- read.csv("case.csv")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
df <- read.csv("fev.csv")
str(df)
df["SEX"] <- factor(df["SEX"])
factor(df["SEX"])
df$SEX <- factor(df$SEX)
df$SEX
df <- read.csv("fev.csv", stringsAsFactors = T)
str(df)
levels(df$SEX) <- c(2, 1)
str(df$SEX)
df <- read.csv("fev.csv", stringsAsFactors = T)
str(df)
summary(df$AGE)
barplot(df$AGE)
boxplot(df$AGE)
summary(df$FEV)
boxplot(df$FEV)
hist(df$FEV)
hist(df$FEV, probability = T)
hist(df$AGE)
hist(df$AGE, probability = T)
summary(df$HEIGHT)
hist(df$HEIGHT)
prop.table(table(df$SEX))
barplot(df$SEX)
barplot(table(df$SEX))
barplot(prop.table(table(df$SEX)))
prop.table(table(df$SMOKE))
barplot(prop.table(table(df$SMOKE)))
boxplot(df$FEV ~ df$SEX)
plot(df$HEIGHT, df$FEV)
coeff
plot(df$HEIGHT, df$FEV)
regresslin <- lm(df$FEV ~ df$HEIGHT)
coeff <- regresslin$coefficients
coeff
abline(coeff[1], coeff[2])
plot(df$HEIGHT, df$FEV)
regresslin <- lm(df$FEV ~ df$HEIGHT)
coeff <- regresslin$coefficients
abline(coeff[1], coeff[2])
plot(df$HEIGHT, df$FEV)
regresslin <- lm(df$FEV ~ df$HEIGHT)
coeff <- regresslin$coefficients
abline(coeff[1], coeff[2], col=2)
plot(df$HEIGHT, df$FEV)
regresslin <- lm(df$FEV ~ df$HEIGHT)
coeff <- regresslin$coefficients
abline(coeff[1], coeff[2], col=2, lwt=3)
plot(df$HEIGHT, df$FEV)
regresslin <- lm(df$FEV ~ df$HEIGHT)
coeff <- regresslin$coefficients
abline(coeff[1], coeff[2], col=2, lwd=3)
res <- regresslin$residuals
devtot <- var(df$FEV)*(n-1)
n <- length(df$HEIGHT)
res <- regresslin$residuals
devtot <- var(df$FEV)*(n-1)
devres <- var(res)*(n-1)
R2 <- 1 - (devres/devtot)
print(R2)
df$HEIGHTCM = df$HEIGHT * 2.54
print(df$HEIGHTCM)
df$HEIGHTCM = df$HEIGHT * 2.54
plot(df$HEIGHTCM, df$FEV)
regresslinCM <- lm(df$FEV ~ df$HEIGHTCM)
coeffCM <- regresslin$coefficients
abline(coeff[1], coeff[2], col=2, lwd=3)
abline(coeff[1], coeff[2], col=2, lwd=3)
df$HEIGHTCM = df$HEIGHT * 2.54
plot(df$HEIGHTCM, df$FEV)
regresslinCM <- lm(df$FEV ~ df$HEIGHTCM)
coeffCM <- regresslin$coefficients
abline(coeff[1], coeff[2], col=2, lwd=3)
df$HEIGHTCM = df$HEIGHT * 2.54
plot(df$HEIGHTCM, df$FEV)
regresslinCM <- lm(df$FEV ~ df$HEIGHTCM)
coeffCM <- regresslin$coefficients
abline(coeffCM[1], coeffCM[2], col=2, lwd=3)
plot(df$HEIGHT, df$FEV)
regresslin <- lm(df$FEV ~ df$HEIGHT)
coeff <- regresslin$coefficients
abline(coeff[1], coeff[2], col=2, lwd=3)
n <- length(df$HEIGHT)
res <- regresslin$residuals
devtot <- var(df$FEV)*(n-1)
devres <- var(res)*(n-1)
R2 <- 1 - (devres/devtot)
print(R2)
df$HEIGHTCM = df$HEIGHT * 2.54
plot(df$HEIGHTCM, df$FEV)
regresslinCM <- lm(df$FEV ~ df$HEIGHTCM)
coeffCM <- regresslinCM$coefficients
abline(coeffCM[1], coeffCM[2], col=2, lwd=3)
print(R2CM)
resCM <- regresslinCM$residuals
devresCM <- var(resCM)*(n-1)
R2CM <- 1 - (devtot/devresCM)
print(R2CM)
resCM <- regresslinCM$residuals
devtot <- var(df$FEV)*(n-1)
devresCM <- var(resCM)*(n-1)
R2CM <- 1 - (devtot/devresCM)
print(R2CM)
resCM <- regresslinCM$residuals
devtot <- var(df$FEV)*(n-1)
devresCM <- var(resCM)*(n-1)
R2CM <- 1 - (devresCM/devtot)
print(R2CM)
america <- read.csv("data/cancerdata.csv")
america <- read.csv("data/cancerdata.csv")
america <- read.csv("data/cancerdata.csv")
america <- read.csv("data/cancerdata.csv")
setwd("~/Universita/Data_Analytics/script")
america <- read.csv("data/cancerdata.csv")
america <- read.csv("cancerdata.csv")
head(america)
daticanc <- america[, c(3, 4, 5, 7, 8)]
cor(daticanc)
pairs(daticanc)
mod1 <- lm(arate ~ GDP, data = daticanc)
resarate <- mod1$residuals
mod2 <- lm(meat ~ GDP, data = daticanc)
resmeat <- mod2$residuals
#ora che ho tolto la dipendenza calcolo la correlaizone
cor(resarate, resmeat)
plot(daticanc$GDP, daticanc$arate)
plot(daticanc$GDP, daticanc$arate, lab=america$Code)
plot(america$GDP, america$arate, lab=america$Code)
plot(df$FEV, res)
plot(df$FEV, res)
plot(df$HEIGHT, df$FEV)
regresslin <- lm(df$FEV ~ df$HEIGHT)
coeff <- regresslin$coefficients
abline(coeff[1], coeff[2], col=2, lwd=3)
n <- length(df$HEIGHT)
res <- regresslin$residuals
devtot <- var(df$FEV)*(n-1)
devres <- var(res)*(n-1)
R2 <- 1 - (devres/devtot)
print(R2)
plot(df$FEV, res)
plot(df$FEV, res)
abline(sqrt(var(res)))
plot(df$FEV, res)
abline(a = sqrt(var(res)))
plot(df$FEV, res)
abline(h = sqrt(var(res)))
abline(h = -sqrt(var(res)))
plot(df$FEV, res)
abline(h = sqrt(var(res)), col = 2, lwd = 3)
abline(h = -sqrt(var(res)), col = 2, lwd = 3)
bassi <- df[df$HEIGHT <= 63]
bassi <- df[, df$HEIGHT <= 63]
bassi <- df[df$HEIGHT <= 63, ]
print(bassi)
str(bassi)
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
str(bassi)
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
str(alti)
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
plot(bassi$HEIGHT, bassi$FEV)
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
plot(bassi$HEIGHT, bassi$FEV)
plot(alti$HEIGHT, alti$FEV)
coeffalti <- coefficients(lm(alti$FEV ~ alti$HEIGHT))
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
#plot(bassi$HEIGHT, bassi$FEV)
plot(alti$HEIGHT, alti$FEV)
coeffalti <- coefficients(lm(alti$FEV ~ alti$HEIGHT))
abline(coeffalti[0], coeffalti[1])
df$HEIGHTCM = df$HEIGHT * 2.54
plot(df$HEIGHTCM, df$FEV)
regresslinCM <- lm(df$FEV ~ df$HEIGHTCM)
coeffCM <- regresslinCM$coefficients
print(coeffCM)
abline(coeffCM[1], coeffCM[2], col=2, lwd=3)
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
#plot(bassi$HEIGHT, bassi$FEV)
plot(alti$HEIGHT, alti$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
abline(coeffalti[0], coeffalti[1])
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
#plot(bassi$HEIGHT, bassi$FEV)
plot(alti$HEIGHT, alti$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
print(coeffalti)
abline(coeffalti[0], coeffalti[1])
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
#plot(bassi$HEIGHT, bassi$FEV)
plot(df$HEIGHT, df$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
print(coeffalti)
abline(coeffalti[0], coeffalti[1])
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
plot(df$HEIGHT, df$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
#modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
print(coeffalti)
abline(coeffalti[0], coeffalti[1])
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
plot(df$HEIGHT, df$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
#modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
#print(coeffalti)
#abline(coeffalti[0], coeffalti[1])
summary(alti)
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
plot(df$HEIGHT, df$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
#modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
#print(coeffalti)
#abline(coeffalti[0], coeffalti[1])
summary(alti$FEV)
#print(coeffalti)
#abline(coeffalti[0], coeffalti[1])
summary(alti$HEIGHT)
#modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
plot(df$HEIGHT, df$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
#modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
#print(coeffalti)
abline(coeffalti[0], coeffalti[1])
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
plot(df$HEIGHT, df$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
#modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
#print(coeffalti)
abline(coeffalti[1], coeffalti[2])
#print(coeffalti)
abline(coeffalti[1], coeffalti[2], col = 2, lwd = 3)
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
plot(df$HEIGHT, df$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
#modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
#print(coeffalti)
abline(coeffalti[1], coeffalti[2], col = 2, lwd = 3)
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
plot(df$HEIGHT, df$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
coeffbassi <- modellobassi$coefficients
abline(coeffalti[1], coeffalti[2], col = 3, lwd = 3)
abline(coeffbassi[1], coeffbassi[2], col = 4, lwd = 3)
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
plot(df$HEIGHT, df$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
coeffbassi <- modellobassi$coefficients
abline(coeffalti[1], coeffalti[2], col = 3, lwd = 3)
abline(coeffbassi[1], coeffbassi[2], col = 4, lwd = 3)
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
plot(df$HEIGHT, df$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
coeffbassi <- modellobassi$coefficients
abline(coeffalti[1], coeffalti[2], xlim = c(63, Inf), col = 3, lwd = 3)
abline(coeffbassi[1], coeffbassi[2], xlim = c(-Inf, 63), col = 4, lwd = 3)
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
plot(df$HEIGHT, df$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
coeffbassi <- modellobassi$coefficients
x_alti <- seq(min(alti$HEIGHT), max(alti$HEIGHT))
lines(x_alti, (x_alti*coeffalti[2] + coeffalti[1]), col = 3, lwd = 3)
#abline(coeffbassi[1], coeffbassi[2], xlim = c(-Inf, 63), col = 4, lwd = 3)
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
plot(df$HEIGHT, df$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
coeffbassi <- modellobassi$coefficients
x_alti <- seq(min(alti$HEIGHT), max(alti$HEIGHT))
lines(x_alti, (x_alti*coeffalti[2] + coeffalti[1]), col = 3, lwd = 3)
x_bassi <- seq(min(bassi$HEIGHT), max(bassi$HEIGHT))
lines(x_bassi, (x_bassi*coeffbassi[2] + coeffbassi[1]), col = 3, lwd = 3)
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
plot(df$HEIGHT, df$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
coeffbassi <- modellobassi$coefficients
x_alti <- seq(min(alti$HEIGHT), max(alti$HEIGHT))
lines(x_alti, (x_alti*coeffalti[2] + coeffalti[1]), col = 3, lwd = 3)
x_bassi <- seq(min(bassi$HEIGHT), max(bassi$HEIGHT))
lines(x_bassi, (x_bassi*coeffbassi[2] + coeffbassi[1]), col = 2, lwd = 3)
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT > 63, ]
plot(df$HEIGHT, df$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
coeffbassi <- modellobassi$coefficients
x_alti <- seq(min(alti$HEIGHT), max(alti$HEIGHT))
lines(x_alti, (x_alti*coeffalti[2] + coeffalti[1]), col = 3, lwd = 3)
x_bassi <- seq(min(bassi$HEIGHT), max(bassi$HEIGHT))
lines(x_bassi, (x_bassi*coeffbassi[2] + coeffbassi[1]), col = 4, lwd = 3)
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT => 63, ]
bassi <- df[df$HEIGHT <= 63, ]
alti <- df[df$HEIGHT >= 63, ]
plot(df$HEIGHT, df$FEV)
modelloalti <- lm(alti$FEV ~ alti$HEIGHT)
modellobassi <- lm(bassi$FEV ~bassi$HEIGHT)
coeffalti <- modelloalti$coefficients
coeffbassi <- modellobassi$coefficients
x_alti <- seq(min(alti$HEIGHT), max(alti$HEIGHT))
lines(x_alti, (x_alti*coeffalti[2] + coeffalti[1]), col = 3, lwd = 3)
x_bassi <- seq(min(bassi$HEIGHT), max(bassi$HEIGHT))
lines(x_bassi, (x_bassi*coeffbassi[2] + coeffbassi[1]), col = 4, lwd = 3)
resCM <- regresslinCM$residuals
devtot <- var(df$FEV)*(n-1)
devresCM <- var(resCM)*(n-1)
R2CM <- summary(regresslinCM)$r.squared
print(R2CM)
df$HEIGHTCM = df$HEIGHT * 2.54
plot(df$HEIGHTCM, df$FEV)
regresslinCM <- lm(df$FEV ~ df$HEIGHTCM)
coeffCM <- regresslinCM$coefficients
abline(coeffCM[1], coeffCM[2], col=2, lwd=3)
R2alti <- summary(modelloalti)$r.squared
R2bassi <- summary(modellobassi)$r.squared
print(R2alti, R2bassi)
R2alti <- summary(modelloalti)$r.squared
R2bassi <- summary(modellobassi)$r.squared
print(R2alti)
R2alti <- summary(modelloalti)$r.squared
R2bassi <- summary(modellobassi)$r.squared
print(R2alti)
print(R2bassi)
resalti <- modelloalti$residuals
devresalti <- var(resalti)*(n-1)
resbassi <- modellobassi$residuals
devresbassi <- var(resbassi)*(n-1)
R2tratti <- 1 - ((devresbassi + devresalti)/devres)
print(R2tratti)
n <- length(df$HEIGHT)
res <- regresslin$residuals
devtot <- var(df$FEV)*(n-1)
devres <- var(res)*(n-1)
R2 <- 1 - (devres/devtot)
print(R2)
resalti <- modelloalti$residuals
devresalti <- var(resalti)*(n-1)
resbassi <- modellobassi$residuals
devresbassi <- var(resbassi)*(n-1)
R2tratti <- 1 - ((devresbassi + devresalti)/devres)
print(R2tratti)
resalti <- modelloalti$residuals
devresalti <- var(resalti)*(length(alti$HEIGHT)-1)
resbassi <- modellobassi$residuals
devresbassi <- var(resbassi)*(length(bassi$HEIGHT)-1)
R2tratti <- 1 - ((devresbassi + devresalti)/devres)
print(R2tratti)
resalti <- modelloalti$residuals
devresalti <- var(resalti)*(length(resalti)-1)
resbassi <- modellobassi$residuals
devresbassi <- var(resbassi)*(length(resbassi)-1)
R2tratti <- 1 - ((devresbassi + devresalti)/devres)
print(R2tratti)
resalti <- modelloalti$residuals
devresalti <- var(resalti)*(length(alti$HEIGHT)-1)
resbassi <- modellobassi$residuals
devresbassi <- var(resbassi)*(length(bassi$HEIGHT)-1)
R2tratti <- 1 - ((devresbassi + devresalti)/devtot)
print(R2tratti)
63*coeffalti[0]+coeffalti[1]
coeffalti
63*coeffalti[0]
63*coeffalti[2]+coeffalti[1]
63*coeffbassi[2]+coeffbassi[1]
altezza_extra <- ifelse(df$HEIGHT > 63, df$HEIGHT - 63, 0)
modellocontinuo <- lm(df$FEV ~ df$HEIGHT + altezza_extra)
coeffcontinuo <- modellocontinuo$coefficients
plot(df$HEIGHT, df$FEV)
lines(x_bassi, (x_bassi*coeffbassi[2] + coeffbassi[1]), col = 4, lwd = 3)
lines(x_alti, (coeffcontinuo[1] + x_alti*coeffcontinuo[2] + x_alti*coeffcontinuo[3]), col = 3, lwd = 3)
altezza_extra <- ifelse(df$HEIGHT > 63, df$HEIGHT - 63, 0)
modellocontinuo <- lm(df$FEV ~ df$HEIGHT + altezza_extra)
coeffcontinuo <- modellocontinuo$coefficients
plot(df$HEIGHT, df$FEV)
lines(x_bassi, (x_bassi*coeffbassi[2] + coeffbassi[1]), col = 4, lwd = 3)
lines(x_alti, (coeffcontinuo[1] + x_alti*coeffcontinuo[2] + x_alti*coeffcontinuo[3]), col = 4, lwd = 3)
altezza_extra <- ifelse(df$HEIGHT > 63, df$HEIGHT - 63, 0)
modellocontinuo <- lm(df$FEV ~ df$HEIGHT + altezza_extra)
coeffcontinuo <- modellocontinuo$coefficients
print(coeffcontinuo)
plot(df$HEIGHT, df$FEV)
lines(x_bassi, (x_bassi*coeffbassi[2] + coeffbassi[1]), col = 4, lwd = 3)
lines(x_alti, (coeffcontinuo[1] + x_alti*coeffcontinuo[2] + x_alti*coeffcontinuo[3]), col = 4, lwd = 3)
altezza_extra <- ifelse(df$HEIGHT > 63, df$HEIGHT - 63, 0)
modellocontinuo <- lm(df$FEV ~ df$HEIGHT + altezza_extra)
coeffcontinuo <- modellocontinuo$coefficients
plot(df$HEIGHT, df$FEV)
lines(x_bassi, (x_bassi*coeffbassi[2] + coeffbassi[1]), col = 4, lwd = 3)
lines(x_alti, (coeffcontinuo[1] + x_alti*coeffcontinuo[2] + (x_alti - 63)*coeffcontinuo[3]), col = 4, lwd = 3)
punto_breakpoint <- 63
# Valore della prima retta (bassi) nel punto 63
y_bassi_63 <- coeffcontinuo[1] + coeffcontinuo[2] * punto_breakpoint
# Valore della seconda retta (alti) nel punto 63
y_alti_63 <- coeffcontinuo[1] + coeffcontinuo[2] * punto_breakpoint + coeffcontinuo[3] * (punto_breakpoint - 63)
# Stampa i valori
cat("Valore retta bassi a x=63:", y_bassi_63, "\n")
cat("Valore retta alti a x=63:", y_alti_63, "\n")
cat("Differenza:", abs(y_bassi_63 - y_alti_63), "\n")
