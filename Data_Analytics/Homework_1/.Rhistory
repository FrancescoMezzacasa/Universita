return(ris)
}
fibo(7)
fibo(7)
#Laboratorio 1
rapp_fibo <- function(vettore){
ris <- c()
print("Ciao")
for (i in 3:length(vettore)){
print(vettore[i])
ris <- c(ris, (vettore[i]/vettore[i-1]))
}
return(ris)
}
fibo <- function(n){
if(n == 0)
return(-1)
if(n == 1)
return(0)
ris <- c(0, 1)
primo <- 0
secondo <- 1
count <- 2
while(count < n){
nuovo <- primo+secondo
ris <- append(ris, nuovo)
primo <- secondo
secondo <- nuovo
count <- count + 1
}
print(rapp_fibo(fibo))
return(ris)
}
fibo(7)
#Laboratorio 1
rapp_fibo <- function(vettore){
ris <- c()
print("Ciao")
for (i in 3:length(vettore)){
print("Ciao2")
ris <- c(ris, (vettore[i]/vettore[i-1]))
}
return(ris)
}
fibo <- function(n){
if(n == 0)
return(-1)
if(n == 1)
return(0)
ris <- c(0, 1)
primo <- 0
secondo <- 1
count <- 2
while(count < n){
nuovo <- primo+secondo
ris <- append(ris, nuovo)
primo <- secondo
secondo <- nuovo
count <- count + 1
}
print(rapp_fibo(fibo))
return(ris)
}
fibo(7)
#Laboratorio 1
rapp_fibo <- function(vettore){
ris <- c()
print("Ciao")
for (i in 3:length(vettore)){
print(vettore[i])
ris <- c(ris, (vettore[i]/vettore[i-1]))
}
return(ris)
}
fibo <- function(n){
if(n == 0)
return(-1)
if(n == 1)
return(0)
ris <- c(0, 1)
primo <- 0
secondo <- 1
count <- 2
while(count < n){
nuovo <- primo+secondo
ris <- append(ris, nuovo)
primo <- secondo
secondo <- nuovo
count <- count + 1
}
print(rapp_fibo(fibo))
return(ris)
}
fibo/7
fibo(7)
#Laboratorio 1
rapp_fibo <- function(vettore){
ris <- c()
print("Ciao")
for (i in 3:length(vettore)){
print(vettore[i])
ris <- c(ris, (vettore[i]/vettore[i-1]))
}
return(ris)
}
fibo <- function(n){
if(n == 0)
return(-1)
if(n == 1)
return(0)
ris <- c(0, 1)
primo <- 0
secondo <- 1
count <- 2
while(count < n){
nuovo <- primo+secondo
ris <- append(ris, nuovo)
primo <- secondo
secondo <- nuovo
count <- count + 1
}
print(fibo)
print(rapp_fibo(fibo))
return(ris)
}
fibo(7)
#Laboratorio 1
rapp_fibo <- function(vettore){
ris <- c()
print("Ciao")
for (i in 3:length(vettore)){
print(vettore[i])
ris <- c(ris, (vettore[i]/vettore[i-1]))
}
return(ris)
}
fibo <- function(n){
if(n == 0)
return(-1)
if(n == 1)
return(0)
ris <- c(0, 1)
primo <- 0
secondo <- 1
count <- 2
while(count < n){
nuovo <- primo+secondo
ris <- append(ris, nuovo)
primo <- secondo
secondo <- nuovo
count <- count + 1
}
print(rapp_fibo(ris))
return(ris)
}
fibo(7)
#Laboratorio 1
rapp_fibo <- function(vettore){
ris <- c()
for (i in 3:length(vettore)){
print(vettore[i])
ris <- c(ris, (vettore[i]/vettore[i-1]))
}
return(ris)
}
fibo <- function(n){
if(n == 0)
return(-1)
if(n == 1)
return(0)
ris <- c(0, 1)
primo <- 0
secondo <- 1
count <- 2
while(count < n){
nuovo <- primo+secondo
ris <- append(ris, nuovo)
primo <- secondo
secondo <- nuovo
count <- count + 1
}
print(rapp_fibo(ris))
return(ris)
}
fibo(30)
x <- runif(20, min = 1, max = 20)
xz
x
media = mean(x)
media
x <- runif(20, min = 1, max = 20)
x <- runif(20, min = 1, max = 20)
media = mean(x)
x_tilde <- c()
for (i in x){
if(x <= media){
x_tilde <- c(x_tilde, media)
} else{
x_tilde <- c(x_tilde, i)
}
}
for (i in x){
if(x[i] <= media){
x_tilde <- c(x_tilde, media)
} else{
x_tilde <- c(x_tilde, x[i])
}
}
x_tilde
funzione <- function(x){
if(x < 0){
return((x*x) - 1)
}else{
return((x*x*x) - 1)
}
}
funzione(3)
funzione(-3)
#Punto 5
data(iris)
force(iris)
iris2 <- iris[sample(iris)]
iris2 <- iris[sample(1:nrow(iris), 15), ]
iris2
iris2$Sepal.Length <- cut(iris2$Sepal.Length, breaks = 5)
iris2$Sepal.Length
str(iris2)
table(iris2$Species)
table(iris2$Sepal.Length)
iris$Sepal.Length <- cut(iris$Sepal.Length, breaks = 5)
table(iris$Species)
table(iris$Sepal.Length)
iris3 <- iris[iris$Species == "setosa"]
iris3 <- iris[iris$Species == "setosa", ]
iris3
numero_na
#nome dei paesi che hanno valori mancanti
nazioni$nome[is.na(nazioni), ]
#nome dei paesi che hanno valori mancanti
nazioni$nome[is.na(nazioni$infmort) | is.na(nazioni$oil), ]
#nome dei paesi che hanno valori mancanti
nazioni[is.na(nazioni$infmort) | is.na(nazioni$oil), "name"]
numero_na <- c()
for (colonna in colnames(nazioni)){
numero_na <- c(numero_na, sum(is.na(nazioni[colonna])))
}
numero_na
#nome dei paesi che hanno valori mancanti
nazioni[is.na(nazioni$infmort) | is.na(nazioni$oil), "nome"]
nazioni <- nazioni[!is.na(nazioni)]
#nome dei paesi che hanno valori mancanti
nazioni[is.na(nazioni$infmort) | is.na(nazioni$oil), "nome"]
numero_na <- c()
for (colonna in colnames(nazioni)){
numero_na <- c(numero_na, sum(is.na(nazioni[colonna])))
}
numero_na
#importo il nuovo dataset
nazioni <- read.csv("nazioni.csv", header = T)
dim(nazioni)[1] #105 righe
colnames(nazioni)
numero_na <- c()
for (colonna in colnames(nazioni)){
numero_na <- c(numero_na, sum(is.na(nazioni[colonna])))
}
numero_na
#nome dei paesi che hanno valori mancanti
nazioni[is.na(nazioni$infmort) | is.na(nazioni$oil), "nome"]
#tolgo le righe che erano na
nazioni <- nazioni[!is.na(nazioni), ]
for (colonna in colnames(nazioni)){
numero_na <- c(numero_na, sum(is.na(nazioni[colonna])))
}
numero_na <- c()
for (colonna in colnames(nazioni)){
numero_na <- c(numero_na, sum(is.na(nazioni[colonna])))
}
numero_na
#importo il nuovo dataset
nazioni <- read.csv("nazioni.csv", header = T)
dim(nazioni)[1] #105 righe
colnames(nazioni)
numero_na <- c()
for (colonna in colnames(nazioni)){
numero_na <- c(numero_na, sum(is.na(nazioni[colonna])))
}
numero_na
#nome dei paesi che hanno valori mancanti
nazioni[is.na(nazioni$infmort) | is.na(nazioni$oil), "nome"]
#tolgo le righe che erano na
nazioni <- na.omit(nazioni)
numero_na <- c()
for (colonna in colnames(nazioni)){
numero_na <- c(numero_na, sum(is.na(nazioni[colonna])))
}
numero_na
nazioni$areaGeo
prop.table(table(nazioni$areaGeo))
prop.table(table(nazioni$areaGeo)) *100
sort(prop.table(table(nazioni$areaGeo)) *100, decreasing = T)
areaGeofact <- factor(nazioni$areaGeo, ordered = T)
areaGeofact
areaGeofact <- factor(nazioni$areaGeo, levels = c("Africas", "Asia", "Americas", "Europe"), ordered = T)
areaGeofact
#ordino le frequenze percentuali
sort(prop.table(table(nazioni$areaGeo)) *100, decreasing = T)
areaGeofact <- factor(nazioni$areaGeo)
areaGeofact
nazioni$areaGeofact <- factor(nazioni$areaGeo, levels = c("Africas", "Asia", "Americas", "Europe"), ordered = T)
nazioni$areaGeofact
#importo il nuovo dataset
nazioni <- read.csv("nazioni.csv", header = T)
dim(nazioni)[1] #105 righe
colnames(nazioni)
numero_na <- c()
for (colonna in colnames(nazioni)){
numero_na <- c(numero_na, sum(is.na(nazioni[colonna])))
}
numero_na
#nome dei paesi che hanno valori mancanti
nazioni[is.na(nazioni$infmort) | is.na(nazioni$oil), "nome"]
#tolgo le righe che erano na
nazioni <- na.omit(nazioni)
#ordino le frequenze percentuali
sort(prop.table(table(nazioni$areaGeo)) *100, decreasing = T)
nazioni$areaGeofact <- factor(nazioni$areaGeo, levels = c("Africas", "Asia", "Americas", "Europe"), ordered = T)
nazioni$areaGeofact
#importo il nuovo dataset
nazioni <- read.csv("nazioni.csv", header = T)
dim(nazioni)[1] #105 righe
colnames(nazioni)
numero_na <- c()
for (colonna in colnames(nazioni)){
numero_na <- c(numero_na, sum(is.na(nazioni[colonna])))
}
numero_na
#nome dei paesi che hanno valori mancanti
nazioni[is.na(nazioni$infmort) | is.na(nazioni$oil), "nome"]
#tolgo le righe che erano na
nazioni <- na.omit(nazioni)
nazioni$areaGeo
#ordino le frequenze percentuali
sort(prop.table(table(nazioni$areaGeo)) *100, decreasing = T)
areaGeofact <- factor(nazioni$areaGeo)
areaGeofact
areaGeofact <- factor(nazioni$areaGeo, ordered = T)
areaGeofact
#ordino le frequenze percentuali
sort(prop.table(table(nazioni$areaGeo)) *100, decreasing = T)
nazioni$areaGeofact <- factor(nazioni$areaGeo, levels = c("Africas", "Asia", "Americas", "Europe"), ordered = T)
nazioni$areaGeofact
nazioni$areaGeofact <- factor(nazioni$areaGeo, levels = c("Africa", "Asia", "Americas", "Europe"), ordered = T)
nazioni$areaGeofact
nazioni$areaGeo <- NULL
head(nazioni)
#stessa cosa con oil
nazioni$oilFactor <- factor(nazioni$oil, levels = c("No", "Yes"))
nazioni$oilFactor
nazioni$oil
#stessa cosa con oil
nazioni$oilFactor <- factor(nazioni$oil)
nazioni$oilFactor
#stessa cosa con oil
nazioni$oilFactor <- factor(nazioni$oil, labels = c("No", "Yes"))
nazioni$oilFactor
nazioni$oil <- NULL
nazioni[nazioni$oilFactor == "Yes", "nome"]
cbind(nazioni[nazioni$oilFactor == "Yes", "nome"], nazioni[nazioni$oilFactor == "Yes", "AreaGeofact"])
nazioni[nazioni$oilFactor == "Yes", "AreaGeofact"]
head(nazioni)
cbind(nazioni[nazioni$oilFactor == "Yes", "nome"], nazioni[nazioni$oilFactor == "Yes", "areaGeofact"])
paesi_esportatori <- cbind(nazioni[nazioni$oilFactor == "Yes", "nome"], nazioni[nazioni$oilFactor == "Yes", "areaGeofact"])
paesi_esportatori
head(nazioni)
table(nazioni$infmort)
table(nazioni$areaGeofact)
head(nazioni)
aggregate(nazioni$infmort, by = nazioni$areaGeofact, FUN = mean)
aggregate(nazioni$infmort, by = list(nazioni$areaGeofact), FUN = mean)
medie_mortalita <- aggregate(nazioni$infmort, by = list(nazioni$areaGeofact), FUN = mean)
medie_mortalita
#trovo gli stati con mortalità maggiore di 300
nazioni$nome[nazioni$infmort > 300, ]
#trovo gli stati con mortalità maggiore di 300
nazioni$nome[nazioni$infmort > 300 ]
#trovo gli stati con mortalità maggiore di 300
nazioni$nome[nazioni$infmort > 300]
nazioni[nazioni$nome == "Saudi Arabia", ]
#trovo gli stati con mortalità maggiore di 300
maggiori <- nazioni$nome[nazioni$infmort > 300]
#trovo gli stati con mortalità maggiore di 300
maggiori <- nazioni$nome[nazioni$infmort > 300]
maggiori
for (nome in maggiori){
print(nazioni$oilFactor[nazioni$nome == nome])
}
for (nome in maggiori){
print(nome)
print(nazioni$oilFactor[nazioni$nome == nome])
}
#calcolo medie mortalità infantile per zona geografica
medie_mortalita <- aggregate(nazioni$infmort, by = list(nazioni$areaGeofact), FUN = mean)
medie_mortalita
#trovo gli stati con mortalità maggiore di 300
maggiori <- nazioni$nome[nazioni$infmort > 300]
maggiori
#dico se esportano petrolio o no
for (nome in maggiori){
print(nome)
print(nazioni$oilFactor[nazioni$nome == nome])
}
#trovo gli stati con mortalità maggiore di 300
maggiori <- nazioni$nome[nazioni$infmort > 300]
nazioni[nazioni$infmort > 300, ]
boxplot(nazioni$infmort[nazioni$areaGeofact == "Africa"])
par(mfrow = c(2, 2))
boxplot(nazioni$infmort[nazioni$areaGeofact == "Africa"])
boxplot(nazioni$infmort[nazioni$areaGeofact == "Asia"])
boxplot(nazioni$infmort[nazioni$areaGeofact == "Americas"])
boxplot(nazioni$infmort[nazioni$areaGeofact == "Europe"])
par(mfrow = c(2, 2))
boxplot(nazioni$infmort[nazioni$areaGeofact == "Africa"], ylim = c(0, 650), main = "Africa")
boxplot(nazioni$infmort[nazioni$areaGeofact == "Asia"], ylim = c(0, 650), main = "Asia")
boxplot(nazioni$infmort[nazioni$areaGeofact == "Americas"], ylim = c(0, 650), main = "Americas")
boxplot(nazioni$infmort[nazioni$areaGeofact == "Europe"], ylim = c(0, 650), main = "Europe")
life <- read.csv("Life.csv", header = T)
life <- life[-1, ]
#vedo i tipi delle variabili
str(life)
head(life)
#istogramma con distribuzione del reddito
hist(nazioni$reddito[nazioni$nome])
#istogramma con distribuzione del reddito
barplot(nazioni$reddito[nazioni$nome])
#istogramma con distribuzione del reddito
hist(nazioni$reddito)
#istogramma con distribuzione del reddito
par(mfrow = c(1, 1))
hist(nazioni$reddito)
hist(nazioni$reddito, xlab = "Nome", main = NULL)
hist(nazioni$reddito, xlab = "Reddito", main = NULL)
#aggiungo la mediana
points(median(nazioni$reddito[nazioni$areaGeofact == "Africa"]))
#aggiungo la mediana
points(median(nazioni$reddito[nazioni$areaGeofact == "Africa"]), color = "Red")
#istogramma con distribuzione del reddito
par(mfrow = c(1, 1))
hist(nazioni$reddito, xlab = "Reddito", main = NULL)
#aggiungo la mediana
points(median(nazioni$reddito[nazioni$areaGeofact == "Africa"]), color = "Red")
#aggiungo la mediana
points(median(nazioni$reddito[nazioni$areaGeofact == "Africa"]), type = "hist")
#aggiungo la mediana
points(median(nazioni$reddito[nazioni$areaGeofact == "Africa"]), col = "red")
#aggiungo la mediana
points(median(nazioni$reddito[nazioni$areaGeofact == "Africa"]), y = median(nazioni$reddito[nazioni$areaGeofact == "Africa"]), col = "red")
#aggiungo la mediana
mediana_africa = median(nazioni$reddito[nazioni$areaGeofact == "Africa"])
mediana_africa
abline(v = mediana_africa, col = 'red')
abline(v = median(nazioni$reddito[nazioni$areaGeofact == "Asia"]), col = 'blue')
abline(v = median(nazioni$reddito[nazioni$areaGeofact == "Europe"]), col = 'green')
abline(v = median(nazioni$reddito[nazioni$areaGeofact == "Americas"]), col = 'pink')
abline(v = median(nazioni$reddito[nazioni$areaGeofact == "Americas"]), col = 'orange')
head(nazioni)
head(nazioni)
str(nazioni)
#divido il reddito in categorie
redditoCat <- cut(nazioni$reddito, breaks = c(500, 1500, 4000))
redditoCat
levels(redditoCat)
#divido il reddito in categorie
redditoCat <- cut(nazioni$reddito, breaks = c(0, 500, 1500, 4000))
levels(redditoCat)
#divido il reddito in categorie
redditoCat <- cut(nazioni$reddito, breaks = c(0, 500, 1500, 4000, Inf))
levels(redditoCat)
redditoCat
#divido il reddito in categorie
redditoCat <- cut(nazioni$reddito, breaks = c(0, 500, 1500, 4000, Inf), include.lowest = T)
redditoCat
table(redditoCat)
table(redditoCat)[4]
#vedo in quali aree geografiche sono
nazioni$areaGeofact[nazioni$reddito >= 4000]
#vedo in quali aree geografiche sono
barplot(nazioni$areaGeofact[nazioni$reddito >= 4000])
#vedo in quali aree geografiche sono
hist(nazioni$areaGeofact[nazioni$reddito >= 4000])
#vedo in quali aree geografiche sono
table(nazioni$areaGeofact[nazioni$reddito >= 4000])
#vedo in quali aree geografiche sono
barplot(table(nazioni$areaGeofact[nazioni$reddito >= 4000]))
prop.table(nazioni$reddito, redditoCat)
table(nazioni$reddito, redditoCat)
table(redditoCat, nazioni$oilFactor)
nazioni$oilFactor
#distribuzioni condizionate
condizionata <- table(redditoCat, nazioni$oilFactor)
frequenze <- prop.table(condizionata, 2)
condizionata
frequenze
frequenze <- prop.table(condizionata, 1)
frequenze
frequenze <- round(prop.table(condizionata, 1), 2)
frequenze
frequenze <- round(prop.table(condizionata, 2), 2)
frequenze
hist(frequenze)
barplot(frequenze)
frequenze
setwd("~/Universita/Data_Analytics/Homework_1")
